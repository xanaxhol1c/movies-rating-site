
name: movies-rating-site

services:
  db: 
    image: postgres:17
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 10
    environment:
      POSTGRES_DB: movies_rating_db
      POSTGRES_USER: movies_moderator
      POSTGRES_PASSWORD: movies
    volumes: 
      - postgres_data:/var/lib/postgresql/postgres_data
      - ./moviesdb_backup.sql:/docker-entrypoint-initdb.d/moviesdb_backup.sql
  django: 
    image: movies-ratings-image
    build: 
      context: ./movies_rating_site
      dockerfile: Dockerfile
    command: bash -c "python manage.py migrate && gunicorn movies_rating_site.wsgi:application --bind 0.0.0.0:8000"
    volumes:
      - ./movies_rating_site:/app
    ports: [8000:8000]
    env_file:
      - ./movies_rating_site/.env
    depends_on:
      db:
          condition: service_healthy

volumes:
  postgres_data: